

ext.setExtProperty = { propVarName, propVarValue ->
    if ( !project.ext.properties.containsKey(propVarName) ) {
        project.ext.set(propVarName, project.hasProperty(propVarName) ? project.findProperty(propVarName) : propVarValue ) ;
    }
}

ext.getUrlHost = { url ->
    if ( !url ) return null ;
    return "${url}".toURL().host
}

ext.getHostIP = { host , purpose ->
    if ( !host ) return null ;

    try {
        return InetAddress.getByName(host).address.collect { it & 0xFF }.join('.')
    }
    catch (Exception e) {
        System.err.println "*** ${purpose} > CAN'T RESOLVE HOST: $host"
        return null
    }
}

ext {

    UNDEFINED = 'undefined' ;

    setExtProperty("defaultDomain", "UNDEFINED_DOMAIN") ;
    setExtProperty("defaultEmail", "contact@${defaultDomain}") ;

    setExtProperty("defaultNexusUrl", "https://nexus.${defaultDomain}") ;
    setExtProperty("defaultArtifactGroup", "com.UNDEFINED_GROUP") ;

    setExtProperty("defaultNexusUsername", "UNDEFINED_NEXUSUSER") ;
    setExtProperty("defaultNexusPassword", "UNDEFINED_NEXUSPASS") ;

    setExtProperty("defaultNpmAuthToken", "UNDEFINED_NPMTOKEN") ;
    setExtProperty("defaultNpmCacheDir", "UNDEFINED_NPMCACHEDIR") ;

    setExtProperty("defaultNpmSnapshotPrefix", "@my-snapshots/") ;
    setExtProperty("defaultNpmReleasePrefix", "@my-releases/") ;    

    ////////////////////////

    theDomain = project.hasProperty('theDomain') ? "${theDomain}" : "${defaultDomain}"
    theEmail = project.hasProperty('theEmail') ? "${theEmail}" : "${defaultEmail}"

    theNexusUrl = project.hasProperty('nexusUrl') ? "${nexusUrl}" : "${defaultNexusUrl}"
    theNexusRepository = project.hasProperty('nexusRepository') ? "${nexusRepository}" : UNDEFINED
    theNexusGroup = project.hasProperty('nexusGroup') ? "${nexusGroup}" : 'maven-public'
    theNexusUsername = project.hasProperty('nexusUsername') ? "${nexusUsername}" : "${defaultNexusUsername}"
    theNexusPassword = project.hasProperty('nexusPassword') ? "${nexusPassword}" : "${defaultNexusPassword}"

    theArtifactGroup = project.hasProperty('artifactGroup') ? "${artifactGroup}" : "${defaultArtifactGroup}"

    theReleaseNumber = project.hasProperty('releaseNumber') ? "${releaseNumber}" : UNDEFINED
    theVersionSuffix = project.hasProperty('versionSuffix') ? "${versionSuffix}" : UNDEFINED
    theArtifactSuffix = project.hasProperty('artifactSuffix') ? "${artifactSuffix}" : UNDEFINED
    theEnvironment = project.hasProperty('environment') ? "${environment}" : UNDEFINED

    theNpmAuthToken = project.hasProperty('npmAuthToken') ? "${npmAuthToken}" : "${defaultNpmAuthToken}"
    theNpmCacheDir = project.hasProperty('npmCacheDir') ? "${npmCacheDir}" : "${defaultNpmCacheDir}"

    theNpmSnapshotPrefix = project.hasProperty('npmSnapshotPrefix') ? "${npmSnapshotPrefix}" : "${defaultNpmSnapshotPrefix}"
    theNpmReleasePrefix = project.hasProperty('npmReleasePrefix') ? "${npmReleasePrefix}" : "${defaultNpmReleasePrefix}"

    ////////////////////////

    println "************************"
    println "** PROJECT PROPERTIES **"
    println "************************"
    println ""
    println "-- environment: ${theEnvironment}"
    println "-- domain: ${theDomain}"
    println "-- email: ${theEmail}"
    println "-- artifactGroup: ${theArtifactGroup}"
    println ""
    println "Nexus:"
    println "-- nexusUrl: ${theNexusUrl}"
    println "-- nexusRepository: ${theNexusRepository}"
    println "-- nexusGroup: ${theNexusGroup}"
    println "-- nexusUsername: ${theNexusUsername}"
    println ""
    println "NPM:"
    println "-- npmCacheDir: ${theNpmCacheDir}"
    println "-- npmReleasePrefix: ${theNpmReleasePrefix}"
    println "-- npmSnapshotPrefix: ${theNpmSnapshotPrefix}"
    println ""
    println "************************"
    
}
